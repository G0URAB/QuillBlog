<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* @app/vendor/composer/autoload_real.php */
class __TwigTemplate_7e00e3c65f200382581c4ea0ff8b20b0089ec6b46f81abe13d76492cd4a29edb extends Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->parent = false;

        $this->blocks = [
        ];
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "@app/vendor/composer/autoload_real.php"));

        // line 1
        echo "<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitf9b77b66a427c29a2b2bd1fb60311182
{
    private static \$loader;

    public static function loadClassLoader(\$class)
    {
        if ('Composer\\Autoload\\ClassLoader' === \$class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::\$loader) {
            return self::\$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInitf9b77b66a427c29a2b2bd1fb60311182', 'loadClassLoader'), true, true);
        self::\$loader = \$loader = new \\Composer\\Autoload\\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitf9b77b66a427c29a2b2bd1fb60311182', 'loadClassLoader'));

        \$useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if (\$useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

            call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9b77b66a427c29a2b2bd1fb60311182::getInitializer(\$loader));
        } else {
            \$map = require __DIR__ . '/autoload_namespaces.php';
            foreach (\$map as \$namespace => \$path) {
                \$loader->set(\$namespace, \$path);
            }

            \$map = require __DIR__ . '/autoload_psr4.php';
            foreach (\$map as \$namespace => \$path) {
                \$loader->setPsr4(\$namespace, \$path);
            }

            \$classMap = require __DIR__ . '/autoload_classmap.php';
            if (\$classMap) {
                \$loader->addClassMap(\$classMap);
            }
        }

        \$loader->register(true);

        if (\$useStaticLoader) {
            \$includeFiles = Composer\\Autoload\\ComposerStaticInitf9b77b66a427c29a2b2bd1fb60311182::\$files;
        } else {
            \$includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach (\$includeFiles as \$fileIdentifier => \$file) {
            composerRequiref9b77b66a427c29a2b2bd1fb60311182(\$fileIdentifier, \$file);
        }

        return \$loader;
    }
}

function composerRequiref9b77b66a427c29a2b2bd1fb60311182(\$fileIdentifier, \$file)
{
    if (empty(\$GLOBALS['__composer_autoload_files'][\$fileIdentifier])) {
        require \$file;

        \$GLOBALS['__composer_autoload_files'][\$fileIdentifier] = true;
    }
}
";
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    public function getTemplateName()
    {
        return "@app/vendor/composer/autoload_real.php";
    }

    public function getDebugInfo()
    {
        return array (  40 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitf9b77b66a427c29a2b2bd1fb60311182
{
    private static \$loader;

    public static function loadClassLoader(\$class)
    {
        if ('Composer\\Autoload\\ClassLoader' === \$class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::\$loader) {
            return self::\$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInitf9b77b66a427c29a2b2bd1fb60311182', 'loadClassLoader'), true, true);
        self::\$loader = \$loader = new \\Composer\\Autoload\\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitf9b77b66a427c29a2b2bd1fb60311182', 'loadClassLoader'));

        \$useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if (\$useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

            call_user_func(\\Composer\\Autoload\\ComposerStaticInitf9b77b66a427c29a2b2bd1fb60311182::getInitializer(\$loader));
        } else {
            \$map = require __DIR__ . '/autoload_namespaces.php';
            foreach (\$map as \$namespace => \$path) {
                \$loader->set(\$namespace, \$path);
            }

            \$map = require __DIR__ . '/autoload_psr4.php';
            foreach (\$map as \$namespace => \$path) {
                \$loader->setPsr4(\$namespace, \$path);
            }

            \$classMap = require __DIR__ . '/autoload_classmap.php';
            if (\$classMap) {
                \$loader->addClassMap(\$classMap);
            }
        }

        \$loader->register(true);

        if (\$useStaticLoader) {
            \$includeFiles = Composer\\Autoload\\ComposerStaticInitf9b77b66a427c29a2b2bd1fb60311182::\$files;
        } else {
            \$includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach (\$includeFiles as \$fileIdentifier => \$file) {
            composerRequiref9b77b66a427c29a2b2bd1fb60311182(\$fileIdentifier, \$file);
        }

        return \$loader;
    }
}

function composerRequiref9b77b66a427c29a2b2bd1fb60311182(\$fileIdentifier, \$file)
{
    if (empty(\$GLOBALS['__composer_autoload_files'][\$fileIdentifier])) {
        require \$file;

        \$GLOBALS['__composer_autoload_files'][\$fileIdentifier] = true;
    }
}
", "@app/vendor/composer/autoload_real.php", "C:\\wamp64\\www\\QuillBlog\\vendor\\composer\\autoload_real.php");
    }
}
